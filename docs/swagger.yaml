definitions:
  models.Book:
    properties:
      author:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.Client:
    properties:
      address:
        type: string
      cnpj:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.FileProcess:
    properties:
      error_msg:
        type: string
      file_path:
        type: string
      fileName:
        type: string
      id:
        type: string
      received_at:
        type: string
      status:
        description: pendente, em processamento, concluido com erros, concluido sem
          erros
        type: string
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      description: Retorna todos os livros cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Lista todos os livros
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Adiciona um novo livro ao banco de dados
      parameters:
      - description: Livro a ser criado
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Cria um novo livro
      tags:
      - books
  /books/{id}:
    delete:
      description: Remove um livro pelo ID
      parameters:
      - description: ID do livro
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove um livro
      tags:
      - books
    get:
      description: Retorna um livro específico pelo ID
      parameters:
      - description: ID do livro
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Busca livro por ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um livro existente
      parameters:
      - description: ID do livro
        in: path
        name: id
        required: true
        type: string
      - description: Dados atualizados
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Atualiza um livro
      tags:
      - books
  /clients:
    get:
      description: Retorna todos os clientes cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Client'
            type: array
      summary: Lista todos os clientes
      tags:
      - clients
    post:
      consumes:
      - application/json
      description: Cria um cliente a partir de um JSON
      parameters:
      - description: Dados do cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo cliente
      tags:
      - clients
  /clients/{id}:
    delete:
      description: Remove um cliente pelo ID
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: string
        example: b3e1c2d0-1234-4abc-9def-1234567890ab
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
    get:
      description: Retorna um cliente pelo ID
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: string
        example: b3e1c2d0-1234-4abc-9def-1234567890ab
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca cliente por ID
      tags:
      - clients
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um cliente pelo ID
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: string
        example: b3e1c2d0-1234-4abc-9def-1234567890ab
      - description: Dados do cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza um cliente
      tags:
      - clients
  /clients/upload:
    post:
      consumes:
      - multipart/form-data
      description: Recebe um arquivo .xls, lê os dados e cadastra clientes no banco
      parameters:
      - description: Arquivo de clientes (.xls)
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload de clientes via arquivo Excel
      tags:
      - clients
  /files:
    get:
      description: Retorna todos os arquivos processados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileProcess'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Lista todos os arquivos
      tags:
      - files
  /files/{id}:
    delete:
      description: Remove um arquivo pelo ID
      parameters:
      - description: ID do arquivo
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove um arquivo
      tags:
      - files
    get:
      description: Retorna um arquivo específico pelo ID
      parameters:
      - description: ID do arquivo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FileProcess'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Busca arquivo por ID
      tags:
      - files
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um arquivo existente
      parameters:
      - description: ID do arquivo
        in: path
        name: id
        required: true
        type: string
      - description: Dados atualizados
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.FileProcess'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FileProcess'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Atualiza um arquivo
      tags:
      - files
  /files/{id}/download:
    get:
      description: Realiza o download do arquivo original enviado para o S3
      parameters:
      - description: ID do arquivo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "302":
          description: Redirect para o arquivo no S3
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Download do arquivo
      tags:
      - files
  /files/sendFiles:
    post:
      consumes:
      - multipart/form-data
      description: Faz upload de um arquivo e registra no sistema
      parameters:
      - description: Arquivo a ser enviado
        in: formData
        name: nomeArquivo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.FileProcess'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Envia arquivo para processamento
      tags:
      - files
swagger: "2.0"
